rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    /* ---------- 관리자 판별 헬퍼 ---------- */
    function isAdmin() {
      return request.auth.uid == "zWWIhPN5tOf7eF7dZj3F6wWqSfU2";
      // 여러 명이면: return request.auth.uid in [ "UID1", "UID2" ];
    }

    /* ---------- users 컬렉션 ---------- */
    match /users/{userId} {
      /* ▶ 누구나 읽기(닉네임 중복 검사용) */
      allow read: if true;

      /* ▶ 생성·수정·삭제 = 본인 또는 관리자 */
      allow create, update, delete: if request.auth != null
                                    && (isAdmin() || request.auth.uid == userId);
    }

    /* ---------- events 컬렉션 ---------- */
    match /events/{eventId} {
      /** ① 읽기 = 승인된 모든 사용자 */
      // allow read: if request.auth != null
      //  && get(/databases/$(database)/documents/users/$(request.auth.uid))
      //        .data.approved == true;

      /* 로그인 여부와 무관하게 읽기 허용 */
      allow read: if true;

      /** ② 생성 = 자신이 작성자로 들어가 있을 때만 (또는 관리자) */
      allow create: if request.auth != null
        && (
          isAdmin() ||
          request.resource.data.createdBy == request.auth.uid
        )
        && get(/databases/$(database)/documents/users/$(request.auth.uid))
              .data.approved == true;

      /** ③ 수정·삭제 = 기존 문서의 작성자일 때만 (또는 관리자) */
      allow update, delete: if request.auth != null
        && (
          isAdmin() ||
          resource.data.createdBy == request.auth.uid
        )
        && get(/databases/$(database)/documents/users/$(request.auth.uid))
              .data.approved == true;
      }

    /* ---------- 그 외 전부 차단 ---------- */
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
